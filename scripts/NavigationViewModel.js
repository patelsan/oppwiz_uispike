// Generated by CoffeeScript 1.6.3
(function() {
  var NavigationViewModel, Opportunity,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  NavigationViewModel = (function() {
    function NavigationViewModel() {
      this.createFieldMap = __bind(this.createFieldMap, this);
      this.fieldMap = ko.observableArray();
      this.createFieldMap();
    }

    NavigationViewModel.prototype.createFieldMap = function() {
      this.fieldMap.push({
        InfoGroup: 'Summary',
        GroupID: 'summary',
        Fields: ko.observableArray([
          {
            Name: 'Opportunity Name',
            ID: 'opportunityname'
          }, {
            Name: 'Opportunity Status',
            ID: 'opportunitystatus'
          }, {
            Name: 'Transaction Type',
            ID: 'transactiontype'
          }, {
            Name: 'Client',
            ID: 'client'
          }
        ])
      });
      this.fieldMap.push({
        InfoGroup: 'Properties',
        GroupID: 'properties',
        Fields: ko.observableArray([
          {
            Name: 'Property Location Market',
            ID: 'propertylocationmarket'
          }, {
            Name: 'Low Property Value',
            ID: 'lowpropertyvalue'
          }, {
            Name: 'High Property Value',
            ID: 'highpropertyvalue'
          }, {
            Name: 'Capital Raised',
            ID: 'capitalraised'
          }
        ])
      });
      this.fieldMap.push({
        InfoGroup: 'Key Dates',
        GroupID: 'keydates',
        Fields: ko.observableArray([
          {
            Name: 'Start Date',
            ID: 'startdate'
          }, {
            Name: 'Pitch Proposal Date',
            ID: 'pitchproposaldate'
          }, {
            Name: 'Listing Expiration Date',
            ID: 'listingexpirationdate'
          }, {
            Name: 'Close Probability',
            ID: 'closeprobability'
          }
        ])
      });
      this.fieldMap.push({
        InfoGroup: 'Commission',
        GroupID: 'commission',
        Fields: ko.observableArray([
          {
            Name: 'Total Commission',
            ID: 'totalcommission'
          }, {
            Name: 'Fee Percentage',
            ID: 'feepercentage'
          }
        ])
      });
      return this.fieldMap.push({
        InfoGroup: 'Key Contacts',
        GroupID: 'keycontacts',
        Fields: ko.observableArray([
          {
            Name: 'Primary Client Contact',
            ID: 'primaryclientcontact'
          }, {
            Name: 'Bill To Contact',
            ID: 'billtocontact'
          }, {
            Name: 'Generating Market',
            ID: 'generatingmarket'
          }, {
            Name: 'Deal Market',
            ID: 'dealmarket'
          }
        ])
      });
    };

    return NavigationViewModel;

  })();

  Opportunity = (function() {
    function Opportunity() {
      this.isCompleted = __bind(this.isCompleted, this);
      this.isRequired = __bind(this.isRequired, this);
      this.OpportunityName = ko.observable();
      this.TransactionType = ko.observable();
      this.Commission = ko.observable();
      this.StartDate = ko.observable();
      this.AwardDate = ko.observable();
    }

    Opportunity.prototype.isRequired = function(fieldId) {
      var _this = this;
      return ko.computed(function() {
        return Boolean(fieldId.length % 2);
      });
    };

    Opportunity.prototype.isCompleted = function(fieldId) {
      var _this = this;
      return ko.computed(function() {
        return Boolean(fieldId.length % 2);
      });
    };

    return Opportunity;

  })();

}).call(this);

/*
//@ sourceMappingURL=NavigationViewModel.map
*/
